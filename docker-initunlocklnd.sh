#!/bin/bash

echo "[lnd_unlock] Waiting 2 seconds for lnd..."
sleep 2;

LND_DIR="/root/.lnd"
CA_CERT="$LND_DIR/tls.cert"

LND_WALLET_DIR="$LND_DIR/data/chain/$1/$2/"
WALLET_FILE="$LND_WALLET_DIR/wallet.db"
LNDUNLOCK_FILE=${WALLET_FILE/wallet.db/walletunlock.json}
MACAROON_FILE="$LND_WALLET_DIR/admin.macaroon"
MACAROON_HEADER="r0ckstar:dev"
if [ -f "$MACAROON_FILE" ]; then
    MACAROON_HEADER="Grpc-Metadata-macaroon:$(xxd -ps -u -c 1000 "$MACAROON_FILE")"
fi 

if [ -f "$WALLET_FILE" ]; then
    if [ ! -f "$LNDUNLOCK_FILE" ]; then
        echo "[lnd_unlock] WARNING: UNLOCK FILE DOESN'T EXIST! MIGRATE LEGACY INSTALLATION TO NEW VERSION ASAP"
        exit 1
    else
        echo "[lnd_unlock] Wallet and Unlock files are present... parsing wallet password and unlocking lnd"

        # parse wallet password from unlock file
        WALLETPASS=$(cat $LNDUNLOCK_FILE | jq -c -r '.wallet_password')
        WALLETPASS_BASE64=$(echo $WALLETPASS|base64|tr -d '\n\r')

        # execute unlockwallet call
        curl -s --cacert "$CA_CERT" -X POST -H "$MACAROON_HEADER" -d '{ "wallet_password":"'$WALLETPASS_BASE64'" }' https://localhost:8080/v1/unlockwallet
    fi

else
    echo "[lnd_unlock] Wallet file doesn't exist. Initializing LND instance with new autogenerated password and seed"

    # generate cryptographically secure random alphanumeric string with length 120
    AEZEEDGEN=$(LC_CTYPE=C tr -d -c '[:alnum:]' </dev/urandom | head -c 60)
    AEZEEDGEN_BASE64=$(echo $AEZEEDGEN|base64|tr -d '\n\r')
    
    GENSEED_RESP=$(curl -s --cacert "$CA_CERT" -X GET -H $MACAROON_HEADER -d '{ "aezeed_passphrase": "'$AEZEEDGEN_BASE64'" }' https://localhost:8080/v1/genseed)

    CIPHER_ARRAY_EXTRACTED=$(echo $GENSEED_RESP | jq -c -r '.cipher_seed_mnemonic')
    WALLETPASS=$(LC_CTYPE=C tr -d -c '[:alnum:]' </dev/urandom | head -c 30)

    # save all the the data to unlock file we'll use for future unlocks
    RESULTJSON=$(echo '{"wallet_password":"'$WALLETPASS'", "aezeed_passphrase":"'$AEZEEDGEN'", "cipher_seed_mnemonic":'$CIPHER_ARRAY_EXTRACTED'}')
    echo $RESULTJSON
    mkdir -p $LND_WALLET_DIR
    echo $RESULTJSON > $LNDUNLOCK_FILE

    # prepare initwallet call json with wallet password and chipher seed mnemonic
    WALLETPASS_BASE64=$(echo $WALLETPASS|base64|tr -d '\n\r')
    INITWALLET_REQ=$(echo '{"wallet_password":"'$WALLETPASS_BASE64'", "cipher_seed_mnemonic":'$CIPHER_ARRAY_EXTRACTED'}')

    # execute initwallet call
    curl -s --cacert "$CA_CERT" -X POST -H "$MACAROON_HEADER" -d "$INITWALLET_REQ" https://localhost:8080/v1/initwallet
fi
